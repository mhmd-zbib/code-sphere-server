// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Define the User model
model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  avatar    String? // URL of the user's avatar image
  createdAt DateTime @default(now()) // Timestamp of user creation
  updatedAt DateTime @updatedAt // Timestamp of the last update

  // Define relationships
  posts    Post[]    @relation("UserPosts") // Posts created by the user
  comments Comment[] @relation("UserComments") // Comments made by the user

  @@index([email], name: "idx_user_email") // for fast data retrieval
}

// Define the Post model
model Post {
  id                Int       @id @default(autoincrement())
  title             String
  description       String
  collaborationType String
  requiredSkills    String[]
  projectLink       String
  comments          Comment[] @relation("PostComments")
  createdAt         DateTime  @default(now())
  user              User      @relation("UserPosts", fields: [userId], references: [id])
  userId            Int
}

// Define the Comment model
model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation("PostComments", fields: [postId], references: [id])
  postId    Int
  user      User     @relation("UserComments", fields: [userId], references: [id])
  userId    Int
}
